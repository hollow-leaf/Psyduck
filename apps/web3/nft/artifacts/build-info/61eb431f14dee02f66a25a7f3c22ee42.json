{
	"id": "61eb431f14dee02f66a25a7f3c22ee42",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Globals.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.20;\n\nimport {Initializable} from \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\nimport {IGlobals} from \"./interfaces/IGlobals.sol\";\n\ncontract Globals is IGlobals, Initializable {\n    //** Modifier */\n    modifier onlyGovernor() {\n        require(msg.sender == governor, \"Globals: only governor\");\n        _;\n    }\n\n    //** Storage */\n    address public override governor;\n    mapping(address => bool) public isEventHolders;\n\n    //** UUPS functions */\n    function initialize(address _governor) public initializer {\n        require(_governor != address(0), \"Globals: _governor is zero address\");\n        governor = _governor;\n    }\n\n    //** allow list function */\n    function setValidEventHolder(address _eventHolder, bool _isValid) external override onlyGovernor {\n        require(_eventHolder != address(0), \"Globals: _eventHolder is zero address\");\n        isEventHolders[_eventHolder] = _isValid;\n        emit ValidEventHolderSet(_eventHolder, _isValid);\n    }\n\n    //** Governor Transfer Functions */\n    function transferGovernor(address _newGovernor) external override onlyGovernor {\n        require(_newGovernor != address(0), \"Globals: _newGovernor is zero address\");\n        emit GovernorTransferred(governor, _newGovernor);\n        governor = _newGovernor;\n    }\n\n    //** view function */\n    function isValidEventHolder(address _eventHolder) external view override returns (bool) {\n        return isEventHolders[_eventHolder];\n    }\n}\n"
			},
			"interfaces/IGlobals.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.20;\n\ninterface IGlobals {\n    //** events */\n    event ValidEventHolderSet(address indexed eventHolder, bool indexed isValid);\n\n    event GovernorTransferred(address _previousGovernor, address _newGovernor);\n\n    //** allow list function */\n\n    function setValidEventHolder(address _eventHolder, bool _isValid) external;\n\n    //** view function */\n    function governor() external view returns (address);\n\n    function isValidEventHolder(address _eventHolder) external view returns (bool);\n\n    //** Governor Transfer Functions */\n    function transferGovernor(address _newGovernor) external;\n}\n"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Globals.sol": {
				"Globals": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_previousGovernor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_newGovernor",
									"type": "address"
								}
							],
							"name": "GovernorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "eventHolder",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"name": "ValidEventHolderSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_governor",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isEventHolders",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventHolder",
									"type": "address"
								}
							],
							"name": "isValidEventHolder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventHolder",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isValid",
									"type": "bool"
								}
							],
							"name": "setValidEventHolder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newGovernor",
									"type": "address"
								}
							],
							"name": "transferGovernor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Globals.sol\":203:1520  contract Globals is IGlobals, Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Globals.sol\":203:1520  contract Globals is IGlobals, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c340a24\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x803d3c20\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb8cc9ce6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe27cdd07\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf8648621\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Globals.sol\":409:441  address public override governor */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Globals.sol\":447:493  mapping(address => bool) public isEventHolders */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Globals.sol\":1083:1346  function transferGovernor(address _newGovernor) external override onlyGovernor {... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Globals.sol\":527:702  function initialize(address _governor) public initializer {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Globals.sol\":1378:1518  function isValidEventHolder(address _eventHolder) external view override returns (bool) {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Globals.sol\":740:1037  function setValidEventHolder(address _eventHolder, bool _isValid) external override onlyGovernor {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Globals.sol\":409:441  address public override governor */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Globals.sol\":447:493  mapping(address => bool) public isEventHolders */\n    tag_16:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Globals.sol\":1083:1346  function transferGovernor(address _newGovernor) external override onlyGovernor {... */\n    tag_21:\n        /* \"Globals.sol\":330:338  governor */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Globals.sol\":316:338  msg.sender == governor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Globals.sol\":316:326  msg.sender */\n      caller\n        /* \"Globals.sol\":316:338  msg.sender == governor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Globals.sol\":308:365  require(msg.sender == governor, \"Globals: only governor\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"Globals.sol\":1204:1205  0 */\n      0x00\n        /* \"Globals.sol\":1180:1206  _newGovernor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Globals.sol\":1180:1192  _newGovernor */\n      dup2\n        /* \"Globals.sol\":1180:1206  _newGovernor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Globals.sol\":1172:1248  require(_newGovernor != address(0), \"Globals: _newGovernor is zero address\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"Globals.sol\":1263:1306  GovernorTransferred(governor, _newGovernor) */\n      0x6fadb1c244276388aee22be93b919985a18748c021e5d48553957a48101a2560\n        /* \"Globals.sol\":1283:1291  governor */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Globals.sol\":1293:1305  _newGovernor */\n      dup3\n        /* \"Globals.sol\":1263:1306  GovernorTransferred(governor, _newGovernor) */\n      mload(0x40)\n      tag_41\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Globals.sol\":1327:1339  _newGovernor */\n      dup1\n        /* \"Globals.sol\":1316:1324  governor */\n      0x00\n      dup1\n        /* \"Globals.sol\":1316:1339  governor = _newGovernor */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Globals.sol\":1083:1346  function transferGovernor(address _newGovernor) external override onlyGovernor {... */\n      pop\n      jump\t// out\n        /* \"Globals.sol\":527:702  function initialize(address _governor) public initializer {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_44\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_45\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_44:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_46\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_46:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_47\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_47:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_48\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_48:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_50:\n        /* \"Globals.sol\":624:625  0 */\n      0x00\n        /* \"Globals.sol\":603:626  _governor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Globals.sol\":603:612  _governor */\n      dup7\n        /* \"Globals.sol\":603:626  _governor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Globals.sol\":595:665  require(_governor != address(0), \"Globals: _governor is zero address\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"Globals.sol\":686:695  _governor */\n      dup6\n        /* \"Globals.sol\":675:683  governor */\n      0x00\n      dup1\n        /* \"Globals.sol\":675:695  governor = _governor */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_55\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Globals.sol\":527:702  function initialize(address _governor) public initializer {... */\n      pop\n      jump\t// out\n        /* \"Globals.sol\":1378:1518  function isValidEventHolder(address _eventHolder) external view override returns (bool) {... */\n    tag_27:\n        /* \"Globals.sol\":1460:1464  bool */\n      0x00\n        /* \"Globals.sol\":1483:1497  isEventHolders */\n      0x01\n        /* \"Globals.sol\":1483:1511  isEventHolders[_eventHolder] */\n      0x00\n        /* \"Globals.sol\":1498:1510  _eventHolder */\n      dup4\n        /* \"Globals.sol\":1483:1511  isEventHolders[_eventHolder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Globals.sol\":1476:1511  return isEventHolders[_eventHolder] */\n      swap1\n      pop\n        /* \"Globals.sol\":1378:1518  function isValidEventHolder(address _eventHolder) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Globals.sol\":740:1037  function setValidEventHolder(address _eventHolder, bool _isValid) external override onlyGovernor {... */\n    tag_32:\n        /* \"Globals.sol\":330:338  governor */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Globals.sol\":316:338  msg.sender == governor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Globals.sol\":316:326  msg.sender */\n      caller\n        /* \"Globals.sol\":316:338  msg.sender == governor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Globals.sol\":308:365  require(msg.sender == governor, \"Globals: only governor\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_36\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"Globals.sol\":879:880  0 */\n      0x00\n        /* \"Globals.sol\":855:881  _eventHolder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Globals.sol\":855:867  _eventHolder */\n      dup3\n        /* \"Globals.sol\":855:881  _eventHolder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Globals.sol\":847:923  require(_eventHolder != address(0), \"Globals: _eventHolder is zero address\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"Globals.sol\":964:972  _isValid */\n      dup1\n        /* \"Globals.sol\":933:947  isEventHolders */\n      0x01\n        /* \"Globals.sol\":933:961  isEventHolders[_eventHolder] */\n      0x00\n        /* \"Globals.sol\":948:960  _eventHolder */\n      dup5\n        /* \"Globals.sol\":933:961  isEventHolders[_eventHolder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Globals.sol\":933:972  isEventHolders[_eventHolder] = _isValid */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Globals.sol\":1021:1029  _isValid */\n      dup1\n        /* \"Globals.sol\":987:1030  ValidEventHolderSet(_eventHolder, _isValid) */\n      iszero\n      iszero\n        /* \"Globals.sol\":1007:1019  _eventHolder */\n      dup3\n        /* \"Globals.sol\":987:1030  ValidEventHolderSet(_eventHolder, _isValid) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xba5e662aa01ca9065060cd0125921c5491a734761b6b15962c2468135405836e\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Globals.sol\":740:1037  function setValidEventHolder(address _eventHolder, bool _isValid) external override onlyGovernor {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_67:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_68:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_96\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_67\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_69:\n        /* \"#utility.yul\":328:352   */\n      tag_98\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_68\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_100\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_69\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_71:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_73:\n        /* \"#utility.yul\":993:1017   */\n      tag_105\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_68\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_106:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_74:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_108\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_73\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_15:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_111\n      tag_71\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1269:1388   */\n    tag_110:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_112\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_74\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1618   */\n    tag_75:\n        /* \"#utility.yul\":1562:1569   */\n      0x00\n        /* \"#utility.yul\":1605:1610   */\n      dup2\n        /* \"#utility.yul\":1598:1611   */\n      iszero\n        /* \"#utility.yul\":1591:1612   */\n      iszero\n        /* \"#utility.yul\":1580:1612   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1733   */\n    tag_76:\n        /* \"#utility.yul\":1705:1726   */\n      tag_115\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1705:1726   */\n      tag_75\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1700:1703   */\n      dup3\n        /* \"#utility.yul\":1693:1727   */\n      mstore\n        /* \"#utility.yul\":1624:1733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1949   */\n    tag_18:\n        /* \"#utility.yul\":1826:1830   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1853:1862   */\n      dup3\n        /* \"#utility.yul\":1849:1867   */\n      add\n        /* \"#utility.yul\":1841:1867   */\n      swap1\n      pop\n        /* \"#utility.yul\":1877:1942   */\n      tag_117\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1877:1942   */\n      tag_76\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1739:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2071   */\n    tag_77:\n        /* \"#utility.yul\":2025:2046   */\n      tag_119\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2025:2046   */\n      tag_75\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2018:2023   */\n      dup2\n        /* \"#utility.yul\":2015:2047   */\n      eq\n        /* \"#utility.yul\":2005:2065   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":2061:2062   */\n      0x00\n        /* \"#utility.yul\":2058:2059   */\n      dup1\n        /* \"#utility.yul\":2051:2063   */\n      revert\n        /* \"#utility.yul\":2005:2065   */\n    tag_120:\n        /* \"#utility.yul\":1955:2071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2077:2210   */\n    tag_78:\n        /* \"#utility.yul\":2120:2125   */\n      0x00\n        /* \"#utility.yul\":2158:2164   */\n      dup2\n        /* \"#utility.yul\":2145:2165   */\n      calldataload\n        /* \"#utility.yul\":2136:2165   */\n      swap1\n      pop\n        /* \"#utility.yul\":2174:2204   */\n      tag_122\n        /* \"#utility.yul\":2198:2203   */\n      dup2\n        /* \"#utility.yul\":2174:2204   */\n      tag_77\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2077:2210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2216:2684   */\n    tag_31:\n        /* \"#utility.yul\":2281:2287   */\n      0x00\n        /* \"#utility.yul\":2289:2295   */\n      dup1\n        /* \"#utility.yul\":2338:2340   */\n      0x40\n        /* \"#utility.yul\":2326:2335   */\n      dup4\n        /* \"#utility.yul\":2317:2324   */\n      dup6\n        /* \"#utility.yul\":2313:2336   */\n      sub\n        /* \"#utility.yul\":2309:2341   */\n      slt\n        /* \"#utility.yul\":2306:2425   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2344:2423   */\n      tag_125\n      tag_71\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2306:2425   */\n    tag_124:\n        /* \"#utility.yul\":2464:2465   */\n      0x00\n        /* \"#utility.yul\":2489:2542   */\n      tag_126\n        /* \"#utility.yul\":2534:2541   */\n      dup6\n        /* \"#utility.yul\":2525:2531   */\n      dup3\n        /* \"#utility.yul\":2514:2523   */\n      dup7\n        /* \"#utility.yul\":2510:2532   */\n      add\n        /* \"#utility.yul\":2489:2542   */\n      tag_74\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2479:2542   */\n      swap3\n      pop\n        /* \"#utility.yul\":2435:2552   */\n      pop\n        /* \"#utility.yul\":2591:2593   */\n      0x20\n        /* \"#utility.yul\":2617:2667   */\n      tag_127\n        /* \"#utility.yul\":2659:2666   */\n      dup6\n        /* \"#utility.yul\":2650:2656   */\n      dup3\n        /* \"#utility.yul\":2639:2648   */\n      dup7\n        /* \"#utility.yul\":2635:2657   */\n      add\n        /* \"#utility.yul\":2617:2667   */\n      tag_78\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2607:2667   */\n      swap2\n      pop\n        /* \"#utility.yul\":2562:2677   */\n      pop\n        /* \"#utility.yul\":2216:2684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2690:2859   */\n    tag_79:\n        /* \"#utility.yul\":2774:2785   */\n      0x00\n        /* \"#utility.yul\":2808:2814   */\n      dup3\n        /* \"#utility.yul\":2803:2806   */\n      dup3\n        /* \"#utility.yul\":2796:2815   */\n      mstore\n        /* \"#utility.yul\":2848:2852   */\n      0x20\n        /* \"#utility.yul\":2843:2846   */\n      dup3\n        /* \"#utility.yul\":2839:2853   */\n      add\n        /* \"#utility.yul\":2824:2853   */\n      swap1\n      pop\n        /* \"#utility.yul\":2690:2859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2865:3037   */\n    tag_80:\n        /* \"#utility.yul\":3005:3029   */\n      0x476c6f62616c733a206f6e6c7920676f7665726e6f7200000000000000000000\n        /* \"#utility.yul\":3001:3002   */\n      0x00\n        /* \"#utility.yul\":2993:2999   */\n      dup3\n        /* \"#utility.yul\":2989:3003   */\n      add\n        /* \"#utility.yul\":2982:3030   */\n      mstore\n        /* \"#utility.yul\":2865:3037   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3043:3409   */\n    tag_81:\n        /* \"#utility.yul\":3185:3188   */\n      0x00\n        /* \"#utility.yul\":3206:3273   */\n      tag_131\n        /* \"#utility.yul\":3270:3272   */\n      0x16\n        /* \"#utility.yul\":3265:3268   */\n      dup4\n        /* \"#utility.yul\":3206:3273   */\n      tag_79\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3199:3273   */\n      swap2\n      pop\n        /* \"#utility.yul\":3282:3375   */\n      tag_132\n        /* \"#utility.yul\":3371:3374   */\n      dup3\n        /* \"#utility.yul\":3282:3375   */\n      tag_80\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3400:3402   */\n      0x20\n        /* \"#utility.yul\":3395:3398   */\n      dup3\n        /* \"#utility.yul\":3391:3403   */\n      add\n        /* \"#utility.yul\":3384:3403   */\n      swap1\n      pop\n        /* \"#utility.yul\":3043:3409   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3415:3834   */\n    tag_36:\n        /* \"#utility.yul\":3581:3585   */\n      0x00\n        /* \"#utility.yul\":3619:3621   */\n      0x20\n        /* \"#utility.yul\":3608:3617   */\n      dup3\n        /* \"#utility.yul\":3604:3622   */\n      add\n        /* \"#utility.yul\":3596:3622   */\n      swap1\n      pop\n        /* \"#utility.yul\":3668:3677   */\n      dup2\n        /* \"#utility.yul\":3662:3666   */\n      dup2\n        /* \"#utility.yul\":3658:3678   */\n      sub\n        /* \"#utility.yul\":3654:3655   */\n      0x00\n        /* \"#utility.yul\":3643:3652   */\n      dup4\n        /* \"#utility.yul\":3639:3656   */\n      add\n        /* \"#utility.yul\":3632:3679   */\n      mstore\n        /* \"#utility.yul\":3696:3827   */\n      tag_134\n        /* \"#utility.yul\":3822:3826   */\n      dup2\n        /* \"#utility.yul\":3696:3827   */\n      tag_81\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3688:3827   */\n      swap1\n      pop\n        /* \"#utility.yul\":3415:3834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3840:4064   */\n    tag_82:\n        /* \"#utility.yul\":3980:4014   */\n      0x476c6f62616c733a205f6e6577476f7665726e6f72206973207a65726f206164\n        /* \"#utility.yul\":3976:3977   */\n      0x00\n        /* \"#utility.yul\":3968:3974   */\n      dup3\n        /* \"#utility.yul\":3964:3978   */\n      add\n        /* \"#utility.yul\":3957:4015   */\n      mstore\n        /* \"#utility.yul\":4049:4056   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4044:4046   */\n      0x20\n        /* \"#utility.yul\":4036:4042   */\n      dup3\n        /* \"#utility.yul\":4032:4047   */\n      add\n        /* \"#utility.yul\":4025:4057   */\n      mstore\n        /* \"#utility.yul\":3840:4064   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4070:4436   */\n    tag_83:\n        /* \"#utility.yul\":4212:4215   */\n      0x00\n        /* \"#utility.yul\":4233:4300   */\n      tag_137\n        /* \"#utility.yul\":4297:4299   */\n      0x25\n        /* \"#utility.yul\":4292:4295   */\n      dup4\n        /* \"#utility.yul\":4233:4300   */\n      tag_79\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4226:4300   */\n      swap2\n      pop\n        /* \"#utility.yul\":4309:4402   */\n      tag_138\n        /* \"#utility.yul\":4398:4401   */\n      dup3\n        /* \"#utility.yul\":4309:4402   */\n      tag_82\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4427:4429   */\n      0x40\n        /* \"#utility.yul\":4422:4425   */\n      dup3\n        /* \"#utility.yul\":4418:4430   */\n      add\n        /* \"#utility.yul\":4411:4430   */\n      swap1\n      pop\n        /* \"#utility.yul\":4070:4436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4442:4861   */\n    tag_40:\n        /* \"#utility.yul\":4608:4612   */\n      0x00\n        /* \"#utility.yul\":4646:4648   */\n      0x20\n        /* \"#utility.yul\":4635:4644   */\n      dup3\n        /* \"#utility.yul\":4631:4649   */\n      add\n        /* \"#utility.yul\":4623:4649   */\n      swap1\n      pop\n        /* \"#utility.yul\":4695:4704   */\n      dup2\n        /* \"#utility.yul\":4689:4693   */\n      dup2\n        /* \"#utility.yul\":4685:4705   */\n      sub\n        /* \"#utility.yul\":4681:4682   */\n      0x00\n        /* \"#utility.yul\":4670:4679   */\n      dup4\n        /* \"#utility.yul\":4666:4683   */\n      add\n        /* \"#utility.yul\":4659:4706   */\n      mstore\n        /* \"#utility.yul\":4723:4854   */\n      tag_140\n        /* \"#utility.yul\":4849:4853   */\n      dup2\n        /* \"#utility.yul\":4723:4854   */\n      tag_83\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4715:4854   */\n      swap1\n      pop\n        /* \"#utility.yul\":4442:4861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4867:5199   */\n    tag_42:\n        /* \"#utility.yul\":4988:4992   */\n      0x00\n        /* \"#utility.yul\":5026:5028   */\n      0x40\n        /* \"#utility.yul\":5015:5024   */\n      dup3\n        /* \"#utility.yul\":5011:5029   */\n      add\n        /* \"#utility.yul\":5003:5029   */\n      swap1\n      pop\n        /* \"#utility.yul\":5039:5110   */\n      tag_142\n        /* \"#utility.yul\":5107:5108   */\n      0x00\n        /* \"#utility.yul\":5096:5105   */\n      dup4\n        /* \"#utility.yul\":5092:5109   */\n      add\n        /* \"#utility.yul\":5083:5089   */\n      dup6\n        /* \"#utility.yul\":5039:5110   */\n      tag_69\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5120:5192   */\n      tag_143\n        /* \"#utility.yul\":5188:5190   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup4\n        /* \"#utility.yul\":5173:5191   */\n      add\n        /* \"#utility.yul\":5164:5170   */\n      dup5\n        /* \"#utility.yul\":5120:5192   */\n      tag_69\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4867:5199   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5426   */\n    tag_84:\n        /* \"#utility.yul\":5345:5379   */\n      0x476c6f62616c733a205f676f7665726e6f72206973207a65726f206164647265\n        /* \"#utility.yul\":5341:5342   */\n      0x00\n        /* \"#utility.yul\":5333:5339   */\n      dup3\n        /* \"#utility.yul\":5329:5343   */\n      add\n        /* \"#utility.yul\":5322:5380   */\n      mstore\n        /* \"#utility.yul\":5414:5418   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5409:5411   */\n      0x20\n        /* \"#utility.yul\":5401:5407   */\n      dup3\n        /* \"#utility.yul\":5397:5412   */\n      add\n        /* \"#utility.yul\":5390:5419   */\n      mstore\n        /* \"#utility.yul\":5205:5426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5432:5798   */\n    tag_85:\n        /* \"#utility.yul\":5574:5577   */\n      0x00\n        /* \"#utility.yul\":5595:5662   */\n      tag_146\n        /* \"#utility.yul\":5659:5661   */\n      0x22\n        /* \"#utility.yul\":5654:5657   */\n      dup4\n        /* \"#utility.yul\":5595:5662   */\n      tag_79\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5588:5662   */\n      swap2\n      pop\n        /* \"#utility.yul\":5671:5764   */\n      tag_147\n        /* \"#utility.yul\":5760:5763   */\n      dup3\n        /* \"#utility.yul\":5671:5764   */\n      tag_84\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":5789:5791   */\n      0x40\n        /* \"#utility.yul\":5784:5787   */\n      dup3\n        /* \"#utility.yul\":5780:5792   */\n      add\n        /* \"#utility.yul\":5773:5792   */\n      swap1\n      pop\n        /* \"#utility.yul\":5432:5798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5804:6223   */\n    tag_54:\n        /* \"#utility.yul\":5970:5974   */\n      0x00\n        /* \"#utility.yul\":6008:6010   */\n      0x20\n        /* \"#utility.yul\":5997:6006   */\n      dup3\n        /* \"#utility.yul\":5993:6011   */\n      add\n        /* \"#utility.yul\":5985:6011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6057:6066   */\n      dup2\n        /* \"#utility.yul\":6051:6055   */\n      dup2\n        /* \"#utility.yul\":6047:6067   */\n      sub\n        /* \"#utility.yul\":6043:6044   */\n      0x00\n        /* \"#utility.yul\":6032:6041   */\n      dup4\n        /* \"#utility.yul\":6028:6045   */\n      add\n        /* \"#utility.yul\":6021:6068   */\n      mstore\n        /* \"#utility.yul\":6085:6216   */\n      tag_149\n        /* \"#utility.yul\":6211:6215   */\n      dup2\n        /* \"#utility.yul\":6085:6216   */\n      tag_85\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6077:6216   */\n      swap1\n      pop\n        /* \"#utility.yul\":5804:6223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6229:6314   */\n    tag_86:\n        /* \"#utility.yul\":6274:6281   */\n      0x00\n        /* \"#utility.yul\":6303:6308   */\n      dup2\n        /* \"#utility.yul\":6292:6308   */\n      swap1\n      pop\n        /* \"#utility.yul\":6229:6314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6320:6421   */\n    tag_87:\n        /* \"#utility.yul\":6356:6363   */\n      0x00\n        /* \"#utility.yul\":6396:6414   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6389:6394   */\n      dup3\n        /* \"#utility.yul\":6385:6415   */\n      and\n        /* \"#utility.yul\":6374:6415   */\n      swap1\n      pop\n        /* \"#utility.yul\":6320:6421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6427:6487   */\n    tag_88:\n        /* \"#utility.yul\":6455:6458   */\n      0x00\n        /* \"#utility.yul\":6476:6481   */\n      dup2\n        /* \"#utility.yul\":6469:6481   */\n      swap1\n      pop\n        /* \"#utility.yul\":6427:6487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6493:6649   */\n    tag_89:\n        /* \"#utility.yul\":6550:6559   */\n      0x00\n        /* \"#utility.yul\":6583:6643   */\n      tag_154\n        /* \"#utility.yul\":6600:6642   */\n      tag_155\n        /* \"#utility.yul\":6609:6641   */\n      tag_156\n        /* \"#utility.yul\":6635:6640   */\n      dup5\n        /* \"#utility.yul\":6609:6641   */\n      tag_86\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":6600:6642   */\n      tag_88\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":6583:6643   */\n      tag_87\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6570:6643   */\n      swap1\n      pop\n        /* \"#utility.yul\":6493:6649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6655:6800   */\n    tag_90:\n        /* \"#utility.yul\":6749:6793   */\n      tag_158\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6749:6793   */\n      tag_89\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":6744:6747   */\n      dup3\n        /* \"#utility.yul\":6737:6794   */\n      mstore\n        /* \"#utility.yul\":6655:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7042   */\n    tag_57:\n        /* \"#utility.yul\":6906:6910   */\n      0x00\n        /* \"#utility.yul\":6944:6946   */\n      0x20\n        /* \"#utility.yul\":6933:6942   */\n      dup3\n        /* \"#utility.yul\":6929:6947   */\n      add\n        /* \"#utility.yul\":6921:6947   */\n      swap1\n      pop\n        /* \"#utility.yul\":6957:7035   */\n      tag_160\n        /* \"#utility.yul\":7032:7033   */\n      0x00\n        /* \"#utility.yul\":7021:7030   */\n      dup4\n        /* \"#utility.yul\":7017:7034   */\n      add\n        /* \"#utility.yul\":7008:7014   */\n      dup5\n        /* \"#utility.yul\":6957:7035   */\n      tag_90\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":6806:7042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7048:7272   */\n    tag_91:\n        /* \"#utility.yul\":7188:7222   */\n      0x476c6f62616c733a205f6576656e74486f6c646572206973207a65726f206164\n        /* \"#utility.yul\":7184:7185   */\n      0x00\n        /* \"#utility.yul\":7176:7182   */\n      dup3\n        /* \"#utility.yul\":7172:7186   */\n      add\n        /* \"#utility.yul\":7165:7223   */\n      mstore\n        /* \"#utility.yul\":7257:7264   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7252:7254   */\n      0x20\n        /* \"#utility.yul\":7244:7250   */\n      dup3\n        /* \"#utility.yul\":7240:7255   */\n      add\n        /* \"#utility.yul\":7233:7265   */\n      mstore\n        /* \"#utility.yul\":7048:7272   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7278:7644   */\n    tag_92:\n        /* \"#utility.yul\":7420:7423   */\n      0x00\n        /* \"#utility.yul\":7441:7508   */\n      tag_163\n        /* \"#utility.yul\":7505:7507   */\n      0x25\n        /* \"#utility.yul\":7500:7503   */\n      dup4\n        /* \"#utility.yul\":7441:7508   */\n      tag_79\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":7434:7508   */\n      swap2\n      pop\n        /* \"#utility.yul\":7517:7610   */\n      tag_164\n        /* \"#utility.yul\":7606:7609   */\n      dup3\n        /* \"#utility.yul\":7517:7610   */\n      tag_91\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":7635:7637   */\n      0x40\n        /* \"#utility.yul\":7630:7633   */\n      dup3\n        /* \"#utility.yul\":7626:7638   */\n      add\n        /* \"#utility.yul\":7619:7638   */\n      swap1\n      pop\n        /* \"#utility.yul\":7278:7644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7650:8069   */\n    tag_65:\n        /* \"#utility.yul\":7816:7820   */\n      0x00\n        /* \"#utility.yul\":7854:7856   */\n      0x20\n        /* \"#utility.yul\":7843:7852   */\n      dup3\n        /* \"#utility.yul\":7839:7857   */\n      add\n        /* \"#utility.yul\":7831:7857   */\n      swap1\n      pop\n        /* \"#utility.yul\":7903:7912   */\n      dup2\n        /* \"#utility.yul\":7897:7901   */\n      dup2\n        /* \"#utility.yul\":7893:7913   */\n      sub\n        /* \"#utility.yul\":7889:7890   */\n      0x00\n        /* \"#utility.yul\":7878:7887   */\n      dup4\n        /* \"#utility.yul\":7874:7891   */\n      add\n        /* \"#utility.yul\":7867:7914   */\n      mstore\n        /* \"#utility.yul\":7931:8062   */\n      tag_166\n        /* \"#utility.yul\":8057:8061   */\n      dup2\n        /* \"#utility.yul\":7931:8062   */\n      tag_92\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":7923:8062   */\n      swap1\n      pop\n        /* \"#utility.yul\":7650:8069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122078ecbdb4e4d86d20236073a4c70a4b35b205d70bca97b9418fa4a72cedf8c2d464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50610b7b8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80630c340a2414610064578063803d3c2014610082578063b8cc9ce6146100b2578063c4d66de8146100ce578063e27cdd07146100ea578063f86486211461011a575b5f80fd5b61006c610136565b6040516100799190610781565b60405180910390f35b61009c600480360381019061009791906107c8565b610159565b6040516100a9919061080d565b60405180910390f35b6100cc60048036038101906100c791906107c8565b610176565b005b6100e860048036038101906100e391906107c8565b61030b565b005b61010460048036038101906100ff91906107c8565b610530565b604051610111919061080d565b60405180910390f35b610134600480360381019061012f9190610850565b610582565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa906108e8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610976565b60405180910390fd5b7f6fadb1c244276388aee22be93b919985a18748c021e5d48553957a48101a25605f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826040516102c1929190610994565b60405180910390a1805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f61031461071b565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561035c5750825b90505f60018367ffffffffffffffff1614801561038f57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561039d575080155b156103d4576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610421576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048690610a2b565b60405180910390fd5b855f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610528575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161051f9190610a9e565b60405180910390a15b505050505050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610606906108e8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490610b27565b60405180910390fd5b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508015158273ffffffffffffffffffffffffffffffffffffffff167fba5e662aa01ca9065060cd0125921c5491a734761b6b15962c2468135405836e60405160405180910390a35050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61076b82610742565b9050919050565b61077b81610761565b82525050565b5f6020820190506107945f830184610772565b92915050565b5f80fd5b6107a781610761565b81146107b1575f80fd5b50565b5f813590506107c28161079e565b92915050565b5f602082840312156107dd576107dc61079a565b5b5f6107ea848285016107b4565b91505092915050565b5f8115159050919050565b610807816107f3565b82525050565b5f6020820190506108205f8301846107fe565b92915050565b61082f816107f3565b8114610839575f80fd5b50565b5f8135905061084a81610826565b92915050565b5f80604083850312156108665761086561079a565b5b5f610873858286016107b4565b92505060206108848582860161083c565b9150509250929050565b5f82825260208201905092915050565b7f476c6f62616c733a206f6e6c7920676f7665726e6f72000000000000000000005f82015250565b5f6108d260168361088e565b91506108dd8261089e565b602082019050919050565b5f6020820190508181035f8301526108ff816108c6565b9050919050565b7f476c6f62616c733a205f6e6577476f7665726e6f72206973207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61096060258361088e565b915061096b82610906565b604082019050919050565b5f6020820190508181035f83015261098d81610954565b9050919050565b5f6040820190506109a75f830185610772565b6109b46020830184610772565b9392505050565b7f476c6f62616c733a205f676f7665726e6f72206973207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610a1560228361088e565b9150610a20826109bb565b604082019050919050565b5f6020820190508181035f830152610a4281610a09565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f610a88610a83610a7e84610a49565b610a65565b610a52565b9050919050565b610a9881610a6e565b82525050565b5f602082019050610ab15f830184610a8f565b92915050565b7f476c6f62616c733a205f6576656e74486f6c646572206973207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f610b1160258361088e565b9150610b1c82610ab7565b604082019050919050565b5f6020820190508181035f830152610b3e81610b05565b905091905056fea264697066735822122078ecbdb4e4d86d20236073a4c70a4b35b205d70bca97b9418fa4a72cedf8c2d464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB7B DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC340A24 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x803D3C20 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xB8CC9CE6 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xE27CDD07 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xF8648621 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x6FADB1C244276388AEE22BE93B919985A18748C021E5D48553957A48101A2560 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP3 SWAP2 SWAP1 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x314 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x35C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x38F JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x421 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x528 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x606 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO ISZERO DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA5E662AA01CA9065060CD0125921C5491A734761B6B15962C2468135405836E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x76B DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x77B DUP2 PUSH2 0x761 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x794 PUSH0 DUP4 ADD DUP5 PUSH2 0x772 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x761 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C2 DUP2 PUSH2 0x79E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x79A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7EA DUP5 DUP3 DUP6 ADD PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x807 DUP2 PUSH2 0x7F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x820 PUSH0 DUP4 ADD DUP5 PUSH2 0x7FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82F DUP2 PUSH2 0x7F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84A DUP2 PUSH2 0x826 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x79A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x873 DUP6 DUP3 DUP7 ADD PUSH2 0x7B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x884 DUP6 DUP3 DUP7 ADD PUSH2 0x83C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476C6F62616C733A206F6E6C7920676F7665726E6F7200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8D2 PUSH1 0x16 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP PUSH2 0x8DD DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8FF DUP2 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476C6F62616C733A205F6E6577476F7665726E6F72206973207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x960 PUSH1 0x25 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP PUSH2 0x96B DUP3 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x98D DUP2 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9A7 PUSH0 DUP4 ADD DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x9B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x772 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x476C6F62616C733A205F676F7665726E6F72206973207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA15 PUSH1 0x22 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP PUSH2 0xA20 DUP3 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA42 DUP2 PUSH2 0xA09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 PUSH2 0xA83 PUSH2 0xA7E DUP5 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA98 DUP2 PUSH2 0xA6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB1 PUSH0 DUP4 ADD DUP5 PUSH2 0xA8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476C6F62616C733A205F6576656E74486F6C646572206973207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB11 PUSH1 0x25 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP PUSH2 0xB1C DUP3 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB3E DUP2 PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xECBDB4E4D86D20236073A4C70A4B35B205D70BCA97B9418FA4 0xA7 0x2C 0xED 0xF8 0xC2 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "203:1317:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getInitializableStorage_252": {
									"entryPoint": 1819,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@governor_278": {
									"entryPoint": 310,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_304": {
									"entryPoint": 779,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isEventHolders_282": {
									"entryPoint": 345,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isValidEventHolder_377": {
									"entryPoint": 1328,
									"id": 377,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setValidEventHolder_336": {
									"entryPoint": 1410,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferGovernor_364": {
									"entryPoint": 374,
									"id": 364,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 2670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85": {
									"entryPoint": 2743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8072:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:3",
														"type": ""
													}
												],
												"src": "593:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:3"
															},
															"nodeType": "YulIf",
															"src": "973:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:3",
														"type": ""
													}
												],
												"src": "920:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:3",
														"type": ""
													}
												],
												"src": "1048:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:3"
															},
															"nodeType": "YulIf",
															"src": "1269:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:3",
														"type": ""
													}
												],
												"src": "1193:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1580:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1605:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1580:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1552:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1562:7:3",
														"type": ""
													}
												],
												"src": "1528:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1700:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1720:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1705:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1705:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1671:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1678:3:3",
														"type": ""
													}
												],
												"src": "1624:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1831:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1841:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1853:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1849:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1841:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1877:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1877:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1803:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1815:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1826:4:3",
														"type": ""
													}
												],
												"src": "1739:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1995:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2049:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2058:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2051:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2051:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2051:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2018:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2040:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2025:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2025:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2015:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2015:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2008:40:3"
															},
															"nodeType": "YulIf",
															"src": "2005:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1988:5:3",
														"type": ""
													}
												],
												"src": "1955:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2126:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2136:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2158:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2145:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2136:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2198:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2174:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2174:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2104:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2112:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2120:5:3",
														"type": ""
													}
												],
												"src": "2077:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2296:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2342:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2344:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2344:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2344:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2317:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2326:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2313:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2313:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2309:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:32:3"
															},
															"nodeType": "YulIf",
															"src": "2306:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2435:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2450:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2454:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2479:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2514:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2525:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2510:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2510:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2534:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2489:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2489:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2479:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2562:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2577:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2591:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2581:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2607:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2639:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2650:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2635:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2635:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2659:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2617:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2617:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2607:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2258:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2269:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2281:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2289:6:3",
														"type": ""
													}
												],
												"src": "2216:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2786:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2803:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2808:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2796:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2796:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2796:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2824:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2843:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2839:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2824:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2758:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2763:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2774:11:3",
														"type": ""
													}
												],
												"src": "2690:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2993:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3001:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2989:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2989:14:3"
																	},
																	{
																		"hexValue": "476c6f62616c733a206f6e6c7920676f7665726e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3005:24:3",
																		"type": "",
																		"value": "Globals: only governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2982:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2963:6:3",
														"type": ""
													}
												],
												"src": "2865:172:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3189:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3199:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3265:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3270:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3206:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3199:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3371:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9",
																	"nodeType": "YulIdentifier",
																	"src": "3282:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3282:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3384:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3395:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3391:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3384:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3177:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3185:3:3",
														"type": ""
													}
												],
												"src": "3043:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3586:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3596:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3608:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3619:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3604:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3604:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3596:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3643:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3639:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3662:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3668:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3658:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3688:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3822:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3696:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3688:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3566:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3581:4:3",
														"type": ""
													}
												],
												"src": "3415:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:118:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3968:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3976:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3964:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3964:14:3"
																	},
																	{
																		"hexValue": "476c6f62616c733a205f6e6577476f7665726e6f72206973207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3980:34:3",
																		"type": "",
																		"value": "Globals: _newGovernor is zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3957:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3957:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3957:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4036:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4044:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4032:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4032:15:3"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4049:7:3",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4025:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4025:32:3"
														}
													]
												},
												"name": "store_literal_in_memory_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3938:6:3",
														"type": ""
													}
												],
												"src": "3840:224:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4216:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4226:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4292:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4297:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4233:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4233:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4226:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4398:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea",
																	"nodeType": "YulIdentifier",
																	"src": "4309:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4309:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4309:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4411:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4422:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4427:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4418:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4411:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4204:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4212:3:3",
														"type": ""
													}
												],
												"src": "4070:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4613:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4623:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4635:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4646:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4631:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4623:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4670:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4681:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4666:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4689:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4685:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4685:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4659:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4659:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4715:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4849:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4723:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4715:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4593:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4608:4:3",
														"type": ""
													}
												],
												"src": "4442:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4993:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5003:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5015:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5026:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5003:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5083:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5096:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5107:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5092:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5092:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5039:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5039:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5164:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5188:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5173:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5173:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5120:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5120:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4957:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4969:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4977:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4988:4:3",
														"type": ""
													}
												],
												"src": "4867:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5311:115:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5333:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5341:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:14:3"
																	},
																	{
																		"hexValue": "476c6f62616c733a205f676f7665726e6f72206973207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5345:34:3",
																		"type": "",
																		"value": "Globals: _governor is zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5401:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5409:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5397:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5397:15:3"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5414:4:3",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5390:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5390:29:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5390:29:3"
														}
													]
												},
												"name": "store_literal_in_memory_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5303:6:3",
														"type": ""
													}
												],
												"src": "5205:221:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5578:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5588:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5654:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5659:2:3",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5595:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5588:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5760:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8",
																	"nodeType": "YulIdentifier",
																	"src": "5671:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5671:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5671:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5773:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5784:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5789:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5780:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5773:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5566:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5574:3:3",
														"type": ""
													}
												],
												"src": "5432:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5975:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5985:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5997:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6008:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5993:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5993:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5985:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6043:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6051:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6057:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6047:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6047:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6077:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6211:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6085:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6077:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5955:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5970:4:3",
														"type": ""
													}
												],
												"src": "5804:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6282:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6292:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6303:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6292:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6264:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6274:7:3",
														"type": ""
													}
												],
												"src": "6229:85:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6364:57:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6374:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6389:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6396:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6385:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:30:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6374:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6346:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6356:7:3",
														"type": ""
													}
												],
												"src": "6320:101:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6459:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6469:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6476:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6469:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6445:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6455:3:3",
														"type": ""
													}
												],
												"src": "6427:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6560:89:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6570:73:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6635:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "6609:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6609:32:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6600:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:42:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "6583:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:60:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6570:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6540:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6550:9:3",
														"type": ""
													}
												],
												"src": "6493:156:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6727:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6744:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "6749:37:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6749:44:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6737:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6737:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6737:57:3"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6715:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6722:3:3",
														"type": ""
													}
												],
												"src": "6655:145:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6911:131:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6921:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6933:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6944:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6929:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6921:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7032:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7017:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6957:50:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:78:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6957:78:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6883:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6895:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6906:4:3",
														"type": ""
													}
												],
												"src": "6806:236:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7154:118:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7176:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7184:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7172:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7172:14:3"
																	},
																	{
																		"hexValue": "476c6f62616c733a205f6576656e74486f6c646572206973207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7188:34:3",
																		"type": "",
																		"value": "Globals: _eventHolder is zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7165:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7165:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7244:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7252:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7240:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7240:15:3"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7257:7:3",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7233:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7233:32:3"
														}
													]
												},
												"name": "store_literal_in_memory_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7146:6:3",
														"type": ""
													}
												],
												"src": "7048:224:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7424:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7434:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7500:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7505:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7441:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7441:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7606:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85",
																	"nodeType": "YulIdentifier",
																	"src": "7517:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7517:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7619:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7630:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7635:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7626:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7626:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7619:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7412:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7420:3:3",
														"type": ""
													}
												],
												"src": "7278:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7821:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7831:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7843:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7854:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7839:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7839:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7831:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7878:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7889:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7874:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7874:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7897:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7903:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7867:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7867:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7867:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7923:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8057:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7931:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7923:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7801:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7816:4:3",
														"type": ""
													}
												],
												"src": "7650:419:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Globals: only governor\")\n\n    }\n\n    function abi_encode_t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Globals: _newGovernor is zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Globals: _governor is zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85(memPtr) {\n\n        mstore(add(memPtr, 0), \"Globals: _eventHolder is zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80630c340a2414610064578063803d3c2014610082578063b8cc9ce6146100b2578063c4d66de8146100ce578063e27cdd07146100ea578063f86486211461011a575b5f80fd5b61006c610136565b6040516100799190610781565b60405180910390f35b61009c600480360381019061009791906107c8565b610159565b6040516100a9919061080d565b60405180910390f35b6100cc60048036038101906100c791906107c8565b610176565b005b6100e860048036038101906100e391906107c8565b61030b565b005b61010460048036038101906100ff91906107c8565b610530565b604051610111919061080d565b60405180910390f35b610134600480360381019061012f9190610850565b610582565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa906108e8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610976565b60405180910390fd5b7f6fadb1c244276388aee22be93b919985a18748c021e5d48553957a48101a25605f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826040516102c1929190610994565b60405180910390a1805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f61031461071b565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561035c5750825b90505f60018367ffffffffffffffff1614801561038f57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561039d575080155b156103d4576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610421576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048690610a2b565b60405180910390fd5b855f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610528575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161051f9190610a9e565b60405180910390a15b505050505050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610606906108e8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490610b27565b60405180910390fd5b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508015158273ffffffffffffffffffffffffffffffffffffffff167fba5e662aa01ca9065060cd0125921c5491a734761b6b15962c2468135405836e60405160405180910390a35050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61076b82610742565b9050919050565b61077b81610761565b82525050565b5f6020820190506107945f830184610772565b92915050565b5f80fd5b6107a781610761565b81146107b1575f80fd5b50565b5f813590506107c28161079e565b92915050565b5f602082840312156107dd576107dc61079a565b5b5f6107ea848285016107b4565b91505092915050565b5f8115159050919050565b610807816107f3565b82525050565b5f6020820190506108205f8301846107fe565b92915050565b61082f816107f3565b8114610839575f80fd5b50565b5f8135905061084a81610826565b92915050565b5f80604083850312156108665761086561079a565b5b5f610873858286016107b4565b92505060206108848582860161083c565b9150509250929050565b5f82825260208201905092915050565b7f476c6f62616c733a206f6e6c7920676f7665726e6f72000000000000000000005f82015250565b5f6108d260168361088e565b91506108dd8261089e565b602082019050919050565b5f6020820190508181035f8301526108ff816108c6565b9050919050565b7f476c6f62616c733a205f6e6577476f7665726e6f72206973207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61096060258361088e565b915061096b82610906565b604082019050919050565b5f6020820190508181035f83015261098d81610954565b9050919050565b5f6040820190506109a75f830185610772565b6109b46020830184610772565b9392505050565b7f476c6f62616c733a205f676f7665726e6f72206973207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f610a1560228361088e565b9150610a20826109bb565b604082019050919050565b5f6020820190508181035f830152610a4281610a09565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f610a88610a83610a7e84610a49565b610a65565b610a52565b9050919050565b610a9881610a6e565b82525050565b5f602082019050610ab15f830184610a8f565b92915050565b7f476c6f62616c733a205f6576656e74486f6c646572206973207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f610b1160258361088e565b9150610b1c82610ab7565b604082019050919050565b5f6020820190508181035f830152610b3e81610b05565b905091905056fea264697066735822122078ecbdb4e4d86d20236073a4c70a4b35b205d70bca97b9418fa4a72cedf8c2d464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC340A24 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x803D3C20 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xB8CC9CE6 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xE27CDD07 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xF8648621 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x6FADB1C244276388AEE22BE93B919985A18748C021E5D48553957A48101A2560 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP3 SWAP2 SWAP1 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x314 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x35C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x38F JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x421 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x528 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x606 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 ISZERO ISZERO DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA5E662AA01CA9065060CD0125921C5491A734761B6B15962C2468135405836E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x76B DUP3 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x77B DUP2 PUSH2 0x761 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x794 PUSH0 DUP4 ADD DUP5 PUSH2 0x772 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7A7 DUP2 PUSH2 0x761 JUMP JUMPDEST DUP2 EQ PUSH2 0x7B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C2 DUP2 PUSH2 0x79E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x79A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7EA DUP5 DUP3 DUP6 ADD PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x807 DUP2 PUSH2 0x7F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x820 PUSH0 DUP4 ADD DUP5 PUSH2 0x7FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82F DUP2 PUSH2 0x7F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84A DUP2 PUSH2 0x826 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x866 JUMPI PUSH2 0x865 PUSH2 0x79A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x873 DUP6 DUP3 DUP7 ADD PUSH2 0x7B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x884 DUP6 DUP3 DUP7 ADD PUSH2 0x83C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476C6F62616C733A206F6E6C7920676F7665726E6F7200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8D2 PUSH1 0x16 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP PUSH2 0x8DD DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8FF DUP2 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476C6F62616C733A205F6E6577476F7665726E6F72206973207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x960 PUSH1 0x25 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP PUSH2 0x96B DUP3 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x98D DUP2 PUSH2 0x954 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9A7 PUSH0 DUP4 ADD DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x9B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x772 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x476C6F62616C733A205F676F7665726E6F72206973207A65726F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA15 PUSH1 0x22 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP PUSH2 0xA20 DUP3 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA42 DUP2 PUSH2 0xA09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 PUSH2 0xA83 PUSH2 0xA7E DUP5 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA98 DUP2 PUSH2 0xA6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB1 PUSH0 DUP4 ADD DUP5 PUSH2 0xA8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476C6F62616C733A205F6576656E74486F6C646572206973207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB11 PUSH1 0x25 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP PUSH2 0xB1C DUP3 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB3E DUP2 PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xECBDB4E4D86D20236073A4C70A4B35B205D70BCA97B9418FA4 0xA7 0x2C 0xED 0xF8 0xC2 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "203:1317:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;527:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1378:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;740:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;409:32;;;;;;;;;;;;:::o;447:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;1083:263::-;330:8;;;;;;;;;;316:22;;:10;:22;;;308:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1204:1:::1;1180:26;;:12;:26;;::::0;1172:76:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1263:43;1283:8;::::0;::::1;;;;;;;;1293:12;1263:43;;;;;;;:::i;:::-;;;;;;;;1327:12;1316:8;::::0;:23:::1;;;;;;;;;;;;;;;;;;1083:263:::0;:::o;527:175::-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;624:1:1::1;603:23;;:9;:23;;::::0;595:70:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;686:9;675:8;::::0;:20:::1;;;;;;;;;;;;;;;;;;5070:14:0::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;527:175:1;:::o;1378:140::-;1460:4;1483:14;:28;1498:12;1483:28;;;;;;;;;;;;;;;;;;;;;;;;;1476:35;;1378:140;;;:::o;740:297::-;330:8;;;;;;;;;;316:22;;:10;:22;;;308:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;879:1:::1;855:26;;:12;:26;;::::0;847:76:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;964:8;933:14;:28;948:12;933:28;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1021:8;987:43;;1007:12;987:43;;;;;;;;;;;;740:297:::0;;:::o;8737:170:0:-;8795:30;8870:21;8860:31;;8737:170;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:90::-;1562:7;1605:5;1598:13;1591:21;1580:32;;1528:90;;;:::o;1624:109::-;1705:21;1720:5;1705:21;:::i;:::-;1700:3;1693:34;1624:109;;:::o;1739:210::-;1826:4;1864:2;1853:9;1849:18;1841:26;;1877:65;1939:1;1928:9;1924:17;1915:6;1877:65;:::i;:::-;1739:210;;;;:::o;1955:116::-;2025:21;2040:5;2025:21;:::i;:::-;2018:5;2015:32;2005:60;;2061:1;2058;2051:12;2005:60;1955:116;:::o;2077:133::-;2120:5;2158:6;2145:20;2136:29;;2174:30;2198:5;2174:30;:::i;:::-;2077:133;;;;:::o;2216:468::-;2281:6;2289;2338:2;2326:9;2317:7;2313:23;2309:32;2306:119;;;2344:79;;:::i;:::-;2306:119;2464:1;2489:53;2534:7;2525:6;2514:9;2510:22;2489:53;:::i;:::-;2479:63;;2435:117;2591:2;2617:50;2659:7;2650:6;2639:9;2635:22;2617:50;:::i;:::-;2607:60;;2562:115;2216:468;;;;;:::o;2690:169::-;2774:11;2808:6;2803:3;2796:19;2848:4;2843:3;2839:14;2824:29;;2690:169;;;;:::o;2865:172::-;3005:24;3001:1;2993:6;2989:14;2982:48;2865:172;:::o;3043:366::-;3185:3;3206:67;3270:2;3265:3;3206:67;:::i;:::-;3199:74;;3282:93;3371:3;3282:93;:::i;:::-;3400:2;3395:3;3391:12;3384:19;;3043:366;;;:::o;3415:419::-;3581:4;3619:2;3608:9;3604:18;3596:26;;3668:9;3662:4;3658:20;3654:1;3643:9;3639:17;3632:47;3696:131;3822:4;3696:131;:::i;:::-;3688:139;;3415:419;;;:::o;3840:224::-;3980:34;3976:1;3968:6;3964:14;3957:58;4049:7;4044:2;4036:6;4032:15;4025:32;3840:224;:::o;4070:366::-;4212:3;4233:67;4297:2;4292:3;4233:67;:::i;:::-;4226:74;;4309:93;4398:3;4309:93;:::i;:::-;4427:2;4422:3;4418:12;4411:19;;4070:366;;;:::o;4442:419::-;4608:4;4646:2;4635:9;4631:18;4623:26;;4695:9;4689:4;4685:20;4681:1;4670:9;4666:17;4659:47;4723:131;4849:4;4723:131;:::i;:::-;4715:139;;4442:419;;;:::o;4867:332::-;4988:4;5026:2;5015:9;5011:18;5003:26;;5039:71;5107:1;5096:9;5092:17;5083:6;5039:71;:::i;:::-;5120:72;5188:2;5177:9;5173:18;5164:6;5120:72;:::i;:::-;4867:332;;;;;:::o;5205:221::-;5345:34;5341:1;5333:6;5329:14;5322:58;5414:4;5409:2;5401:6;5397:15;5390:29;5205:221;:::o;5432:366::-;5574:3;5595:67;5659:2;5654:3;5595:67;:::i;:::-;5588:74;;5671:93;5760:3;5671:93;:::i;:::-;5789:2;5784:3;5780:12;5773:19;;5432:366;;;:::o;5804:419::-;5970:4;6008:2;5997:9;5993:18;5985:26;;6057:9;6051:4;6047:20;6043:1;6032:9;6028:17;6021:47;6085:131;6211:4;6085:131;:::i;:::-;6077:139;;5804:419;;;:::o;6229:85::-;6274:7;6303:5;6292:16;;6229:85;;;:::o;6320:101::-;6356:7;6396:18;6389:5;6385:30;6374:41;;6320:101;;;:::o;6427:60::-;6455:3;6476:5;6469:12;;6427:60;;;:::o;6493:156::-;6550:9;6583:60;6600:42;6609:32;6635:5;6609:32;:::i;:::-;6600:42;:::i;:::-;6583:60;:::i;:::-;6570:73;;6493:156;;;:::o;6655:145::-;6749:44;6787:5;6749:44;:::i;:::-;6744:3;6737:57;6655:145;;:::o;6806:236::-;6906:4;6944:2;6933:9;6929:18;6921:26;;6957:78;7032:1;7021:9;7017:17;7008:6;6957:78;:::i;:::-;6806:236;;;;:::o;7048:224::-;7188:34;7184:1;7176:6;7172:14;7165:58;7257:7;7252:2;7244:6;7240:15;7233:32;7048:224;:::o;7278:366::-;7420:3;7441:67;7505:2;7500:3;7441:67;:::i;:::-;7434:74;;7517:93;7606:3;7517:93;:::i;:::-;7635:2;7630:3;7626:12;7619:19;;7278:366;;;:::o;7650:419::-;7816:4;7854:2;7843:9;7839:18;7831:26;;7903:9;7897:4;7893:20;7889:1;7878:9;7874:17;7867:47;7931:131;8057:4;7931:131;:::i;:::-;7923:139;;7650:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "587800",
								"executionCost": "617",
								"totalCost": "588417"
							},
							"external": {
								"governor()": "2483",
								"initialize(address)": "106230",
								"isEventHolders(address)": "2833",
								"isValidEventHolder(address)": "2936",
								"setValidEventHolder(address,bool)": "28813",
								"transferGovernor(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 1520,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 1520,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078ecbdb4e4d86d20236073a4c70a4b35b205d70bca97b9418fa4a72cedf8c2d464736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "C340A24"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "803D3C20"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "B8CC9CE6"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "C4D66DE8"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "E27CDD07"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "F8648621"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 1520,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 409,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 447,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 447,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 447,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1083,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1083,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 527,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 527,
											"end": 702,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 527,
											"end": 702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 527,
											"end": 702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 527,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 527,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 527,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 527,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1378,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1378,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1378,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 740,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 409,
											"end": 441,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 447,
											"end": 493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 447,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 330,
											"end": 338,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 330,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 316,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 316,
											"end": 326,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 316,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 316,
											"end": 338,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 308,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1192,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1248,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1172,
											"end": 1248,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6FADB1C244276388AEE22BE93B919985A18748C021E5D48553957A48101A2560"
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1305,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1263,
											"end": 1306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1306,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1339,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 527,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 624,
											"end": 625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 603,
											"end": 612,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 603,
											"end": 626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 603,
											"end": 626,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 595,
											"end": 665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 595,
											"end": 665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 686,
											"end": 695,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 675,
											"end": 683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 695,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 527,
											"end": 702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1483,
											"end": 1511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 330,
											"end": 338,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 330,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 330,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 316,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 316,
											"end": 326,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 316,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 316,
											"end": 338,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 308,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 308,
											"end": 365,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 308,
											"end": 365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 855,
											"end": 881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 855,
											"end": 867,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 855,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 855,
											"end": 881,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 855,
											"end": 881,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 847,
											"end": 923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 847,
											"end": 923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 972,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 960,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 933,
											"end": 961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 933,
											"end": 972,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1029,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1019,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "BA5E662AA01CA9065060CD0125921C5491A734761B6B15962C2468135405836E"
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1030,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1705,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1877,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2071,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1955,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2025,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2025,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2047,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2005,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2005,
											"end": 2065,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2005,
											"end": 2065,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2005,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2071,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2210,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2077,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2164,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2165,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2198,
											"end": 2203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2174,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2204,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2174,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2210,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2684,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2216,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2324,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2336,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2341,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2425,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2306,
											"end": 2425,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2344,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2344,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2423,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2344,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2306,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2534,
											"end": 2541,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2523,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2532,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2542,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2617,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2659,
											"end": 2666,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2648,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2635,
											"end": 2657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2617,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2667,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2617,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2607,
											"end": 2667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2607,
											"end": 2667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2859,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2690,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 2785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2803,
											"end": 2806,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2852,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 2846,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2859,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 3037,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2865,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3029,
											"name": "PUSH",
											"source": 3,
											"value": "476C6F62616C733A206F6E6C7920676F7665726E6F7200000000000000000000"
										},
										{
											"begin": 3001,
											"end": 3002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 2999,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2989,
											"end": 3003,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2982,
											"end": 3030,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 3037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3043,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3270,
											"end": 3272,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3265,
											"end": 3268,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3206,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3273,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3206,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3273,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3371,
											"end": 3374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3282,
											"end": 3375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3375,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3282,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3402,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3391,
											"end": 3403,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3834,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3415,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3621,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3666,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3678,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3655,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3652,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3679,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3696,
											"end": 3827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3696,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3688,
											"end": 3827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3688,
											"end": 3827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3834,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 4064,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3840,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 4014,
											"name": "PUSH",
											"source": 3,
											"value": "476C6F62616C733A205F6E6577476F7665726E6F72206973207A65726F206164"
										},
										{
											"begin": 3976,
											"end": 3977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3978,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4044,
											"end": 4046,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4057,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 4064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 4064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4070,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4215,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4297,
											"end": 4299,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4292,
											"end": 4295,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4233,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4300,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4233,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4226,
											"end": 4300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4226,
											"end": 4300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4309,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4398,
											"end": 4401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4309,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4309,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4309,
											"end": 4402,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4309,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4411,
											"end": 4430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4411,
											"end": 4430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4070,
											"end": 4436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4861,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 4612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4635,
											"end": 4644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4685,
											"end": 4705,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4666,
											"end": 4683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4706,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4723,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4723,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4723,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4723,
											"end": 4854,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4723,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 5199,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4867,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5107,
											"end": 5108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5105,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5083,
											"end": 5089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5039,
											"end": 5110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5110,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5039,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5188,
											"end": 5190,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5164,
											"end": 5170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5120,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5192,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5120,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 5199,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 5199,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 5199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 5199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 5199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5426,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5205,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5379,
											"name": "PUSH",
											"source": 3,
											"value": "476C6F62616C733A205F676F7665726E6F72206973207A65726F206164647265"
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5322,
											"end": 5380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "PUSH",
											"source": 3,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5409,
											"end": 5411,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5401,
											"end": 5407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5412,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5798,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5432,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5574,
											"end": 5577,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5659,
											"end": 5661,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5654,
											"end": 5657,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5595,
											"end": 5662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5662,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5595,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5588,
											"end": 5662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5588,
											"end": 5662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5671,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5671,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5671,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5671,
											"end": 5764,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5671,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5773,
											"end": 5792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5804,
											"end": 6223,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5804,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 5974,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6010,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5997,
											"end": 6006,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5985,
											"end": 6011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5985,
											"end": 6011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6047,
											"end": 6067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6043,
											"end": 6044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6045,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6068,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 6211,
											"end": 6215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6085,
											"end": 6216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6216,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 6085,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5804,
											"end": 6223,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5804,
											"end": 6223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5804,
											"end": 6223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5804,
											"end": 6223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6314,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6229,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6292,
											"end": 6308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6292,
											"end": 6308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6421,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6320,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6389,
											"end": 6394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6421,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6427,
											"end": 6487,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6427,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6469,
											"end": 6481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6427,
											"end": 6487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6427,
											"end": 6487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6427,
											"end": 6487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6427,
											"end": 6487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6649,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6493,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6600,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6609,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6635,
											"end": 6640,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6609,
											"end": 6641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6641,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6609,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6600,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6600,
											"end": 6642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6600,
											"end": 6642,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6600,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6583,
											"end": 6643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6643,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6583,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6493,
											"end": 6649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6800,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6655,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6749,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6749,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6749,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6749,
											"end": 6793,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6749,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 7042,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6806,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 6910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 6946,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6957,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7017,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6957,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6957,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6957,
											"end": 7035,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6957,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 7042,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 7042,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 7042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 7042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6806,
											"end": 7042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7272,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7048,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7188,
											"end": 7222,
											"name": "PUSH",
											"source": 3,
											"value": "476C6F62616C733A205F6576656E74486F6C646572206973207A65726F206164"
										},
										{
											"begin": 7184,
											"end": 7185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7182,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7172,
											"end": 7186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7165,
											"end": 7223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7257,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7252,
											"end": 7254,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7244,
											"end": 7250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7255,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7420,
											"end": 7423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 7505,
											"end": 7507,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 7441,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7441,
											"end": 7508,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 7441,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7606,
											"end": 7609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7517,
											"end": 7610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7610,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7517,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7637,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7630,
											"end": 7633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7626,
											"end": 7638,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7619,
											"end": 7638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7619,
											"end": 7638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7278,
											"end": 7644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7816,
											"end": 7820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7856,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7843,
											"end": 7852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7839,
											"end": 7857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7831,
											"end": 7857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7831,
											"end": 7857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7893,
											"end": 7913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7874,
											"end": 7891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7914,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7931,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7931,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7931,
											"end": 8062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7931,
											"end": 8062,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 7931,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7923,
											"end": 8062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7923,
											"end": 8062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 8069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/utils/Initializable.sol",
								"Globals.sol",
								"interfaces/IGlobals.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"governor()": "0c340a24",
							"initialize(address)": "c4d66de8",
							"isEventHolders(address)": "803d3c20",
							"isValidEventHolder(address)": "e27cdd07",
							"setValidEventHolder(address,bool)": "f8648621",
							"transferGovernor(address)": "b8cc9ce6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_previousGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eventHolder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"ValidEventHolderSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isEventHolders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventHolder\",\"type\":\"address\"}],\"name\":\"isValidEventHolder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventHolder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isValid\",\"type\":\"bool\"}],\"name\":\"setValidEventHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Globals.sol\":\"Globals\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"Globals.sol\":{\"keccak256\":\"0x03e88299398f3184dee3cc1d67412d036e44638bc1069a5f6096a67af4b7840d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f7a43d8e6a1172d154ffc17ca197dc6c20202fe4a24ab6fc31532e46ea35d4ff\",\"dweb:/ipfs/QmZeA8HjTXEScxLHThnSFnk3bhbaHHcRTVQ5bSB4p522Ex\"]},\"interfaces/IGlobals.sol\":{\"keccak256\":\"0x94175a99eda5ed66b6fbaa1b9dbbdd263906a22fa92c7e664a461d3bd7efa377\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c58b1df97ccc64a0bd4f4c3bf872820eea40282c71126551f07cb9ac9a897cac\",\"dweb:/ipfs/Qmbu9J7ec9fizbxTMzydeiwHf5qgHLwf8tozkTzbuc3WdD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 278,
								"contract": "Globals.sol:Globals",
								"label": "governor",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 282,
								"contract": "Globals.sol:Globals",
								"label": "isEventHolders",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IGlobals.sol": {
				"IGlobals": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_previousGovernor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_newGovernor",
									"type": "address"
								}
							],
							"name": "GovernorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "eventHolder",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"name": "ValidEventHolderSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventHolder",
									"type": "address"
								}
							],
							"name": "isValidEventHolder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventHolder",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isValid",
									"type": "bool"
								}
							],
							"name": "setValidEventHolder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newGovernor",
									"type": "address"
								}
							],
							"name": "transferGovernor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"governor()": "0c340a24",
							"isValidEventHolder(address)": "e27cdd07",
							"setValidEventHolder(address,bool)": "f8648621",
							"transferGovernor(address)": "b8cc9ce6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_previousGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eventHolder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"ValidEventHolderSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventHolder\",\"type\":\"address\"}],\"name\":\"isValidEventHolder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventHolder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isValid\",\"type\":\"bool\"}],\"name\":\"setValidEventHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IGlobals.sol\":\"IGlobals\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IGlobals.sol\":{\"keccak256\":\"0x94175a99eda5ed66b6fbaa1b9dbbdd263906a22fa92c7e664a461d3bd7efa377\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c58b1df97ccc64a0bd4f4c3bf872820eea40282c71126551f07cb9ac9a897cac\",\"dweb:/ipfs/Qmbu9J7ec9fizbxTMzydeiwHf5qgHLwf8tozkTzbuc3WdD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						]
					},
					"id": 254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4726:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4746:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4770:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4851:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4887:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4908:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4901:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4983:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4979:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4999:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5013:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5066:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5086:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5137:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6291:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6357:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6357:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6357:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6390:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6431:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6450:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6427:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6477:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6498:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6491:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6618:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6651:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6261:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6252:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6921:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:0"
									},
									"src": "6893:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7136:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7151:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7146:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7170:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7191:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7184:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:0"
									},
									"scope": 253,
									"src": "7084:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7760:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7826:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7826:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7859:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7900:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7896:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7917:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7931:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7981:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8021:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8035:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8087:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8082:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:0"
									},
									"scope": 253,
									"src": "7711:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8308:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8325:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8325:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8318:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8300:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:0"
									},
									"scope": 253,
									"src": "8243:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8543:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8553:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:0"
									},
									"scope": 253,
									"src": "8487:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8827:80:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8846:55:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8860:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nodeType": "YulIdentifier",
																"src": "8870:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8837:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8795:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8795:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:0"
									},
									"scope": 253,
									"src": "8737:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 254,
							"src": "2349:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:8797:0"
				},
				"id": 0
			},
			"Globals.sol": {
				"ast": {
					"absolutePath": "Globals.sol",
					"exportedSymbols": {
						"Globals": [
							378
						],
						"IGlobals": [
							417
						],
						"Initializable": [
							253
						]
					},
					"id": 379,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 255,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 379,
							"sourceUnit": 254,
							"src": "64:84:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 256,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 253,
										"src": "72:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IGlobals.sol",
							"file": "./interfaces/IGlobals.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 379,
							"sourceUnit": 418,
							"src": "150:51:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 258,
										"name": "IGlobals",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 417,
										"src": "158:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "IGlobals",
										"nameLocations": [
											"223:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 417,
										"src": "223:8:1"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "223:8:1"
								},
								{
									"baseName": {
										"id": 262,
										"name": "Initializable",
										"nameLocations": [
											"233:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "233:13:1"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "233:13:1"
								}
							],
							"canonicalName": "Globals",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 378,
							"linearizedBaseContracts": [
								378,
								253,
								417
							],
							"name": "Globals",
							"nameLocation": "212:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "298:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 266,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "316:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "320:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "316:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 268,
																"name": "governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "330:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "316:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476c6f62616c733a206f6e6c7920676f7665726e6f72",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "340:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9",
																"typeString": "literal_string \"Globals: only governor\""
															},
															"value": "Globals: only governor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_257993aa9e86e622405359c5efab0d79fdca7b61ec65c23b62a31ec4235d39e9",
																"typeString": "literal_string \"Globals: only governor\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "308:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "308:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "308:57:1"
											},
											{
												"id": 273,
												"nodeType": "PlaceholderStatement",
												"src": "375:1:1"
											}
										]
									},
									"id": 275,
									"name": "onlyGovernor",
									"nameLocation": "283:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:1"
									},
									"src": "274:109:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										404
									],
									"constant": false,
									"functionSelector": "0c340a24",
									"id": 278,
									"mutability": "mutable",
									"name": "governor",
									"nameLocation": "433:8:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 277,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "424:8:1"
									},
									"scope": 378,
									"src": "409:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 276,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "409:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "803d3c20",
									"id": 282,
									"mutability": "mutable",
									"name": "isEventHolders",
									"nameLocation": "479:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 378,
									"src": "447:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 281,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 279,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "455:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "447:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 280,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "466:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "585:117:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "603:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "624:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "616:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "616:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "616:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "603:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476c6f62616c733a205f676f7665726e6f72206973207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "628:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8",
																"typeString": "literal_string \"Globals: _governor is zero address\""
															},
															"value": "Globals: _governor is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c48b73e23d59981e6b9d2eda70ebdcc49a2fa524e6354ef4683de2d058c50f8",
																"typeString": "literal_string \"Globals: _governor is zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "595:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "595:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "595:70:1"
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "governor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "675:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "_governor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "686:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "675:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "675:20:1"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 286,
												"name": "initializer",
												"nameLocations": [
													"573:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "573:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "573:11:1"
										}
									],
									"name": "initialize",
									"nameLocation": "536:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_governor",
												"nameLocation": "555:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "547:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:19:1"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "585:0:1"
									},
									"scope": 378,
									"src": "527:175:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										399
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "837:200:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 315,
																"name": "_eventHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "855:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "879:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "871:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 316,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "871:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "871:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "855:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476c6f62616c733a205f6576656e74486f6c646572206973207a65726f2061646472657373",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "883:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85",
																"typeString": "literal_string \"Globals: _eventHolder is zero address\""
															},
															"value": "Globals: _eventHolder is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_763feec3291faa2de30cc07cb0b7954496f13d574aeb35d9481066c3a724df85",
																"typeString": "literal_string \"Globals: _eventHolder is zero address\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "847:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "847:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "847:76:1"
											},
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 324,
															"name": "isEventHolders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "933:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 326,
														"indexExpression": {
															"id": 325,
															"name": "_eventHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "948:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "933:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 327,
														"name": "_isValid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "964:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "933:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "933:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 331,
															"name": "_eventHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "1007:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 332,
															"name": "_isValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "1021:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 330,
														"name": "ValidEventHolderSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "987:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "987:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "EmitStatement",
												"src": "982:48:1"
											}
										]
									},
									"functionSelector": "f8648621",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 311,
												"name": "onlyGovernor",
												"nameLocations": [
													"824:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 275,
												"src": "824:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "824:12:1"
										}
									],
									"name": "setValidEventHolder",
									"nameLocation": "749:19:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "815:8:1"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "_eventHolder",
												"nameLocation": "777:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "769:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "_isValid",
												"nameLocation": "796:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "791:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:37:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:0:1"
									},
									"scope": 378,
									"src": "740:297:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										416
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "1162:184:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 345,
																"name": "_newGovernor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "1180:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1204:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1196:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 346,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1196:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1180:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "476c6f62616c733a205f6e6577476f7665726e6f72206973207a65726f2061646472657373",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1208:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea",
																"typeString": "literal_string \"Globals: _newGovernor is zero address\""
															},
															"value": "Globals: _newGovernor is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a07d793696403b0b7df6ab8759c7b92cea261e48b67baa451bea35466cbbd8ea",
																"typeString": "literal_string \"Globals: _newGovernor is zero address\""
															}
														],
														"id": 344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1172:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1172:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "1172:76:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 355,
															"name": "governor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "1283:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1293:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 354,
														"name": "GovernorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1263:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1263:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "EmitStatement",
												"src": "1258:48:1"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "governor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "1316:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 360,
														"name": "_newGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1327:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1316:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "1316:23:1"
											}
										]
									},
									"functionSelector": "b8cc9ce6",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "onlyGovernor",
												"nameLocations": [
													"1149:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 275,
												"src": "1149:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:12:1"
										}
									],
									"name": "transferGovernor",
									"nameLocation": "1092:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1140:8:1"
									},
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "_newGovernor",
												"nameLocation": "1117:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1109:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:22:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:0:1"
									},
									"scope": 378,
									"src": "1083:263:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										411
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "1466:52:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 372,
														"name": "isEventHolders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "1483:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 374,
													"indexExpression": {
														"id": 373,
														"name": "_eventHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1498:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1483:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 371,
												"id": 375,
												"nodeType": "Return",
												"src": "1476:35:1"
											}
										]
									},
									"functionSelector": "e27cdd07",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidEventHolder",
									"nameLocation": "1387:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 368,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1442:8:1"
									},
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_eventHolder",
												"nameLocation": "1414:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1406:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:22:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "1460:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1460:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:6:1"
									},
									"scope": 378,
									"src": "1378:140:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "203:1317:1",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24,
								386,
								392
							]
						}
					],
					"src": "39:1482:1"
				},
				"id": 1
			},
			"interfaces/IGlobals.sol": {
				"ast": {
					"absolutePath": "interfaces/IGlobals.sol",
					"exportedSymbols": {
						"IGlobals": [
							417
						]
					},
					"id": 418,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGlobals",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 417,
							"linearizedBaseContracts": [
								417
							],
							"name": "IGlobals",
							"nameLocation": "74:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ba5e662aa01ca9065060cd0125921c5491a734761b6b15962c2468135405836e",
									"id": 386,
									"name": "ValidEventHolderSet",
									"nameLocation": "114:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"indexed": true,
												"mutability": "mutable",
												"name": "eventHolder",
												"nameLocation": "150:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "134:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "176:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "163:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "163:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:51:2"
									},
									"src": "108:77:2"
								},
								{
									"anonymous": false,
									"eventSelector": "6fadb1c244276388aee22be93b919985a18748c021e5d48553957a48101a2560",
									"id": 392,
									"name": "GovernorTransferred",
									"nameLocation": "197:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "_previousGovernor",
												"nameLocation": "225:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "217:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newGovernor",
												"nameLocation": "252:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "244:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:49:2"
									},
									"src": "191:75:2"
								},
								{
									"functionSelector": "f8648621",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setValidEventHolder",
									"nameLocation": "314:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "_eventHolder",
												"nameLocation": "342:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "334:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "_isValid",
												"nameLocation": "361:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "356:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 395,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "356:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:37:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:0:2"
									},
									"scope": 417,
									"src": "305:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0c340a24",
									"id": 404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governor",
									"nameLocation": "421:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:2:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "455:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:9:2"
									},
									"scope": 417,
									"src": "412:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e27cdd07",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidEventHolder",
									"nameLocation": "479:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_eventHolder",
												"nameLocation": "506:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "498:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:22:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "543:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "543:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:6:2"
									},
									"scope": 417,
									"src": "470:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b8cc9ce6",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferGovernor",
									"nameLocation": "604:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "_newGovernor",
												"nameLocation": "629:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "621:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:22:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:2"
									},
									"scope": 417,
									"src": "595:57:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 418,
							"src": "64:590:2",
							"usedErrors": [],
							"usedEvents": [
								386,
								392
							]
						}
					],
					"src": "39:616:2"
				},
				"id": 2
			}
		}
	}
}